- extends "ab_testing/base.jade"
- load staticfiles i18n
- block "js"
    | {{ block.super }}
    script(src!="{% static "js/Chart.min.js" %}")
    script(src!="{% static "js/spin.min.js" %}")
    script(src!="{% static "js/handlebars-v1.3.0.js" %}")
    script
        var spinner = new Spinner({
          lines: 13, // The number of lines to draw
          length: 20, // The length of each line
          width: 10, // The line thickness
          radius: 30, // The radius of the inner circle
          corners: 1, // Corner roundness (0..1)
          rotate: 0, // The rotation offset
          direction: 1, // 1: clockwise, -1: counterclockwise
          color: '#000', // #rgb or #rrggbb or array of colors
          speed: 1, // Rounds per second
          trail: 60, // Afterglow percentage
          shadow: false, // Whether to render a shadow
          hwaccel: false, // Whether to use hardware acceleration
          className: 'spinner', // The CSS class to assign to the spinner
          zIndex: 2e9, // The z-index (defaults to 2000000000)
          top: '50%', // Top position relative to parent
          left: '50%' // Left position relative to parent
        });
        var ab_callbacks = [];
        var ab_events = [];
        var model_a = null;
        var model_b = null;
        var ab_last = null;
        var ab_limit = 100000;
        {% verbatim %}
        var hdb_list_template = Handlebars.compile('{{#each expts}}<a class="list-group-item{{#if is_active}} ' +
         'active{{/if}}" action="activate_exp({{id}})">{{name}}</a>{{/each}}<a class="list-group-item" ' +
          'action="create_exp()">New Test</a>');
        {% endverbatim %}
        function upload_data() {
            $.ajax({
                url: "{% url "ab_events" %}"+(window.ab_last != null ? ("?starting="+window.ab_last) : ""),
                type: "GET",
                dataType: "json",
                success: function(data) {
                    if(data.length != 0) {
                        window.spinner.spin($("#ab_frequencies_container").get(0));
                        window.ab_last = data[0].timestamp;
                        window.ab_events = window.ab_events.concat(data);
                        if(window.ab_events.length > window.ab_limit)
                            window.ab_events.splice(0, window.ab_events.length-window.ab_limit);
                        if(window.model_a == null || window.model_b == null)
                            $.each(data, function(index, value) {
                                if(window.model_a == null) {
                                    window.model_a = value.model;
                                    $("#model_a-label").html(window.model_a);
                                } else if(window.model_b == null && window.model_a != value.model) {
                                    window.model_b = value.model;
                                    $("#model_b-label").html(window.model_b);
                                    return true;
                                }
                            });
                        $.each(ab_callbacks, function(index, value) {
                            value(window.ab_events);
                        });
                        $(".spinner").remove();
                    }
                }
            });
        }
        var ab_getter = setInterval(function(){upload_data()}, 10000);
        upload_data();

- block "body"
    nav(role="navigarion").navbar.navbar-inverse
        .container-fluid
            .navbar-header
                button(type="button", data-toggle="collapse", data-target="#ab-dashboard-navbar").navbar-toggle
                    span.sr-only Toggle navigation
                    span.icon-bar
                    span.icon-bar
                    span.icon-bar
                a(href!="{% url "ab_dashboard" %}").navbar-brand  A/B Dashboard
            .collapse.navbar-collapse#ab-dashboard-navbar
                ul.nav.navbar-nav
                    li.active
                        a(href="#") Stats


    #main
        .row
            .col-md-2.col-md-offset-1
                #ab_active
                .list-group#ab_experiments_list
                script
                    function ab_load_experiments() {
                        $.ajax({
                            url: "{% url "ab_experiments" %}",
                            type: "GET",
                            dataType: "json",
                            success: function(data) {
                                active = null;
                                ab_list = $("#ab_experiments_list").get(0);
                                sorted_data = data.sort(function(a, b) {return a["name"]>b["name"];});
                                /*$.each(sorted_data, function(index, value) {
                                    if(value.is_active) {
                                        window.model_a = value.models[0][0];
                                        window.model_b = value.models[1][0];
                                        $("#ab_active").html("<p><strong>active</strong>: "+value.name+"<\p>"+
                                        "<p><strong>Models:</strong></p><p>A-"+window.model_a+"</p>"+
                                        "<p>B-"+window.model_b+"</p>");
                                        return true;
                                    }
                                });*/
                                $("#ab_experiments_list").html(hdb_list_template({expts: sorted_data}));
                            }
                        });
                    }
                    ab_load_experiments();
                

            .col-md-7
                h2 AB Frequencies
                #row
                    .col-md-4
                        ul.list-group
                            li.list-group-item
                                span.badge(style="background-color:rgba(220,220,220,0.5);") # 
                                #model_a-label Model A
                            li.list-group-item
                                span.badge(style="background-color:rgba(151,187,205,0.5);") #
                                #model_b-label Model B
                        .btn-group
                            button.btn(action="upload_data();")
                                span.glyphicon.glyphicon-refresh
                    .col-md-8#ab_frequencies_container
                        canvas(width="500", height="400")#ab_frequencies
                script
                    function abFrequencies(data) {
                        var datas = [[0, 0, 0, 0], [0, 0, 0, 0]];
                        $.each(data, function(index, value) {
                           if(value.model == window.model_a)
                                datas[0][value.type]++;
                            else
                                datas[1][value.type]++;
                        });
                        var ctx = $("#ab_frequencies").get(0).getContext("2d");
                        var chart = new Chart(ctx).Bar(
                            {
                                labels: ["Recommended", "Clicked", "Installed", "Removed"],
                                datasets: [
                                    {
                                        label: window.model_a,
                                        fillColor: "rgba(220,220,220,0.5)",
                                        strokeColor: "rgba(220,220,220,0.8)",
                                        highlightFill: "rgba(220,220,220,0.75)",
                                        highlightStroke: "rgba(220,220,220,1)",
                                        data: datas[0]
                                    },
                                    {
                                        label: window.model_b,
                                        fillColor: "rgba(151,187,205,0.5)",
                                        strokeColor: "rgba(151,187,205,0.8)",
                                        highlightFill: "rgba(151,187,205,0.75)",
                                        highlightStroke: "rgba(151,187,205,1)",
                                        data: datas[1]
                                    }
                                ]
                            },
                            {
                                showTooltips: true,
                                tooltipEvents: ["mousemove", "touchstart", "touchmove"],
                            });
                    }
                    //abFrequencies(ab_events);
                    ab_callbacks.push(abFrequencies);

